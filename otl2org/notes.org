# $Id$

* format pliku otl (The Vim Outliner)

** z dokumentacji tvo

A TVO outline consists of:

- Headings -- Text with 0 or more tabs preceding it. These are by default
  displayed in color, and logically include text and headings that are more
  indented. If the tabs are immediately followed by a '+' character, then that
  heading will be extracted along with the text when you do a \T
  |tvo-<LocalLeader>T|.

- Plain text -- Text preceded by 0 or more tabs and the '|' character.

- File links -- File names enclosed in square brackets like [README.otl]. You
  can navigate to these files

- Vim tags -- Regular vim tags (which use a |tags| file), enclosed in square
  brackets like [tvo-outlines]. If you have |Thlnk| installed, these can also
  use its style of tags.

- Vim command tags -- Vim |commands| enclosed in square brackets with a leading
  colon, like [:he tags]

You can choose at what level headings become hidden.

You can choose to fold all the headings and see just text blocks with their
immediately enclosing headings.

** moja interpretacja

*** headings

tekst poprzedzony przez 0 lub więcej znaków tabulacji
/^(\t*)([^\t]+)$/
  - $1 - ilość znaków \t w $1 to poziom nagłówka, 0 - pierwszy, 1 - drugi, ...
  - $2 - treść nagłówka

*** plain text

tekst zaczynający się od 0 lub więcej spacji i znaku |
/^(\t*|)(.*)$/
  - $1 - zignoruj
  - $2 - wiersz tekstu

*** file links

zignoruj

*** vim tags

zignoruj

*** vim command tags

zignoruj

* projekt skryptu

- Skrypt otl2org.rb jest unixowym filtrem: jeśli ma parametry to
  powinny to być nazwy plików, z których są pobierane dane, a wyniki
  są drukowane na stdout; jeśli brak argumentów to skrypt czyta dane
  ze strumienia stdin i wysyła wynik na stdout.

- W języku Ruby taką funkcjonalność można osiągnąć dzięki ARGF

  ARGF.each {|line| ...}

- Skrypt będzie przetwarzał niezależnie kolejne wiersze.

- Nie potrzeba robić parsingu całego pliku (drzewa); wystarczy
  konwertować poszczególne wiersze.

- Jak zorganizować testy?
  - testować funkcję działającą na pojedynczym wierszu
  - testować wywołanie całego skryptu dla pliku testowego i badać plik
    wynikowy
